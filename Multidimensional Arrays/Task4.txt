using System;
using System.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.CompilerServices;
using System.Text;

namespace ConsoleApp2
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] matrixDimensions = Console.ReadLine().Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();
            
            int rows = matrixDimensions[0];
            int cols = matrixDimensions[1];

            string[,] matrix = new string[rows, cols];
            
            for (int row = 0; row < matrix.GetLength(0); row++)
            {
                string[] rowInput = Console.ReadLine().Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries).ToArray();
                
                for (int col = 0; col < matrix.GetLength(1); col++)
                {
                    matrix[row, col] = rowInput[col];
                }
            }

            while (true)
            {
                
                string[] rawInput = Console.ReadLine().Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries).ToArray();

                if (rawInput[0] == "END")
                {
                    break;
                }
                
                SwapMatrix(matrix, rawInput);
                
            }

        }

        static void SwapMatrix(string[,] matrix, string[] rawInput)
        {
            
            if (rawInput.Length != 5)
            {
                Console.WriteLine("Invalid input!");
                return;
            }

            if (rawInput[0] != "swap")
            {
                Console.WriteLine("Invalid input!");
                return;
            }

            int row1 = int.Parse(rawInput[1]);
            int col1 = int.Parse(rawInput[2]);
            int row2 = int.Parse(rawInput[3]);
            int col2 = int.Parse(rawInput[4]);

            if (row1 < 0 || row1 > matrix.GetLength(0)
                         || col1 < 0
                         || col1 > matrix.GetLength(1)
                         || row2 < 0
                         || row2 > matrix.GetLength(0)
                         || col2 < 0
                         || col2 > matrix.GetLength(1))
            {
                Console.WriteLine("Invalid input!");
                return;
            }

            string tempInput = matrix[row1, col1];

            matrix[row1, col1] = matrix[row2, col2];

            matrix[row2, col2] = tempInput;
            
            for (int row = 0; row < matrix.GetLength(0); row++)

            {

                for (int col = 0; col < matrix.GetLength(1); col++)

                {

                    Console.Write("{0} ", matrix[row, col]);

                }

                Console.WriteLine();
            }
            
        }
    }
}